# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: set up qemu
        uses: docker/setup-qemu-action@v1

      - name: set up buildx
        uses: docker/setup-buildx-action@v1
        
      - name: login to github container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_REGISTRY_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
          
      - name: docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            dotwee/alsa2mqtt
            ghcr.io/dotwee/alsa2mqtt
          flavor: |
            latest=${{ github.event_name == 'push' }}
          tags: |
            type=raw,value=${{ github.sha }}
          labels: |
            maintainer=Lukas Wolfsteiner <lukas@wolfsteiner.media>
            org.opencontainers.image.title=alsa2mqtt
            org.opencontainers.image.source=https://github.com/dotWee/docker-alsa2mqtt

      - name: build docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: ${{ github.event_name == 'push' }}
